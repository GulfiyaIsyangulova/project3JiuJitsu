{"version":3,"sources":["services/AuthService.js","components/user/Signup.js","components/user/Login.js","components/Navbar.js","components/googleMap.js","components/gyms/DetailsComponent.js","components/gyms/GymIndex.js","components/PlacesAutocomplete.js","App.js","components/user/UserProfile.js","serviceWorker.js","index.js"],"names":["AuthService","_this","this","Object","classCallCheck","signup","username","password","service","post","then","response","data","login","currentUser","get","logout","axios","create","baseURL","withCredentials","Signup","props","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","name","value","tryToSignUp","preventDefault","uName","state","usernameInput","pWord","passwordInput","toggleForm","getUser","react_default","a","createElement","onSubmit","onChange","Component","Login","tryToLogin","Navbar","location","theUser","onClick","pleaseLogOut","style","textDecoration","DetailsComponent","showComments","commentArray","gymComments","forEach","oneComment","console","log","gym","toString","theGymId","String","push","length","map","i","key","owner","rating","title","content","commentCreate","event","Axios","commentTitle","commentReview","commentRating","gymid","newlyCreatedComment","theGymsComments","toConsumableArray","getComments","catch","err","_event$target","_this2","height","borderRadius","width","float","margin","padding","info","formatted_phone_number","website","photos","src","photo","alt","fontSize","action","method","review","border","type","React","GymIndex","showGyms","allTheGyms","_id","maxWidth","address","editing","Geocode","fromAddress","_response$results$0$g","results","geometry","lat","lng","error","LocationSearchInput","handleSelect","geocodeByAddress","getLatLng","latLng","dist_default","onSelect","_ref","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","filter","types","includes","suggestion","active","backgroundColor","cursor","description","undefined","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","GymMap","compose","withProps","googleMapURL","loadingElement","containerElement","marginLeft","mapElement","withGoogleMap","react_google_maps_lib","defaultZoom","defaultCenter","geoLocations","marker","index","onToggleOpenInfoWindow","isOpen","onCloseClick","isMarkerShown","App","getAllGyms","responseFromApi","listOfGyms","ready","setTimeout","mapReady","setGeoLocations","concat","getGymComments","gymCommentsFromApi","number","gymInfo","place_id","result","details","getCurrentlyLoggedInUser","currentlyLoggedIn","whichForm","theForm","signupShowing","loginShowing","setApiKey","class","components_Navbar","PlacesAutocomplete_LocationSearchInput","user_Signup","user_Login","googleMap","gyms_DetailsComponent","assign","react_router","exact","path","component","render","GymIndex_GymIndex","getData","Boolean","window","hostname","match","ReactDOM","react_router_dom","src_App_0","document","getElementById","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.9e0bc3a8.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: 'http://https://jiu-jitsu-locator.herokuapp.com/api/auth',\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/signup', {username:username, password:password})\n    .then(response => response.data)\n  }\n\n  login = (username, password) =>{\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  currentUser = () =>{\n    return this.service.get('/getcurrentuser')\n    .then(response => response.data)\n  }\n\n\n  logout = () =>{\n    return this.service.post('/logout', {})\n    .then(response => response.data)\n  }\n\n\n}\n\nexport default AuthService;\n","import React, { Component } from 'react';\nimport AuthService from '../../services/AuthService';\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { usernameInput: '', passwordInput: '' };\n    this.service = new AuthService();\n  }\n\n  handleChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value})\n  }\n\n  tryToSignUp = (e) =>{\n      e.preventDefault();\n      const uName = this.state.usernameInput;\n      const pWord = this.state.passwordInput;\n    \n    this.service.signup(uName, pWord)\n    .then(()=>{\n        this.props.toggleForm('signup');\n        this.props.getUser();\n    })\n\n  }\n\n  \n\n  render(){\n    return(\n      <form onSubmit = {this.tryToSignUp}>\n\n          <h3>Signup For An Account</h3>\n\n          <legend>Username</legend>\n          <input value={this.state.usernameInput}\n            name=\"usernameInput\"\n            onChange={this.handleChange}\n          />\n\n          <legend>Password</legend>\n          <input value={this.state.passwordInput} \n            name=\"passwordInput\"\n            onChange={this.handleChange}\n          />\n\n\n\n        <button>Submit</button>\n\n      </form>\n    )\n  }\n}\n\nexport default Signup;\n","import React, { Component } from 'react';\nimport AuthService from '../../services/AuthService';\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = { usernameInput: '', passwordInput: '' };\n    this.service = new AuthService();\n  }\n\n  handleChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value})\n  }\n\n  tryToLogin = (e) =>{\n      e.preventDefault();\n      const uName = this.state.usernameInput;\n      const pWord = this.state.passwordInput;\n    \n      this.service.login(uName, pWord)\n      .then(()=>{\n          this.props.toggleForm('login');\n          this.props.getUser();\n\n          // this.props.history.push('/gyms')\n      })\n\n  }\n\n  \n\n  render(){\n    return(\n      <form onSubmit = {this.tryToLogin}>\n\n          <h3>Already a member</h3>\n\n          <legend>Username</legend>\n          <input value={this.state.usernameInput}\n            name=\"usernameInput\"\n            onChange={this.handleChange}\n          />\n\n          <legend>Password</legend>\n          <input value={this.state.passwordInput} \n            name=\"passwordInput\"\n            onChange={this.handleChange}\n          />\n\n\n\n        <button>Submit</button>\n\n      </form>\n    )\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport {Link, NavLink} from 'react-router-dom';\nimport './navbar.css'\n\n\n\nfunction Navbar(props){\n\n    const doTheLogout = () =>{\n        props.pleaseLogOut()\n        .then(()=>{\n            props.getUser();\n        })\n\n    }\n\n    return(\n\n\n\n        <nav>\n           \n\n            \n          \n        {!props.theUser && \n        <span>\n        <button onClick = {()=> props.toggleForm('login')} > Login </button>\n        <button onClick = {()=> props.toggleForm('signup')}>Sign Up</button>\n        </span>\n        }\n\n        {props.theUser && \n        <span>\n\n            Hey, {props.theUser.username}!\n        <button onClick = {doTheLogout} style={{ textDecoration: `100%`}} >Log out </button>\n\n\n        </span>\n        }\n\n    \n\n\n\n        </nav>\n    )\n\n\n\n\n\n\n\n\n}\n\nexport default Navbar;","import React from 'react';\nimport { compose, withProps } from \"recompose\"\nimport { GoogleMap, Marker, withGoogleMap, withScriptjs, InfoWindow } from \"react-google-maps\"\nimport axios from 'axios';\n\nlet location;\n\nconsole.log(\"what is navigator >>>>>>>>>>>> \", this);\nlet showComments = (gymId) => {\n  axios.get(`http://https://jiu-jitsu-locator.herokuapp.com/reviews//gymComments/${gymId}`)\n  .then(gymComments => {\n    return gymComments.data.map((oneComment, i) => {\n      console.log(\"the gym comments >>>>><<<<<<<<>>>>>>>><<<<<<<<<>>>>>> \", oneComment);\n      return (\n        <div key={i}>\n          <div>\n            <h3>{oneComment.owner.username}</h3>\n            <h4>{oneComment.rating}</h4>\n          </div>\n          <div>\n            <h3>{oneComment.title}</h3>\n            <p>{oneComment.content}</p>\n          </div>\n        </div>\n      )\n    })\n  }).catch(err => console.log(err))\n}\n\nif (navigator.geolocation) {\n  navigator.geolocation.getCurrentPosition(function (position) {\n    location = { lat: position.coords.latitude, lng: position.coords.longitude }\n  })\n} else {\n  location = { lat: 20, lng: -80 }\n\n}\n\nconst GymMap = compose(\n  withProps({\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyAU9nQ_E20F7o9usfZFFEv8lLeDkLjlCxk\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `600px`, width:`1000px`, marginLeft: `30px`}} />,\n    mapElement: <div style={{ height: `100%`}} />,\n  }),\n  // withScriptjs,\n  withGoogleMap\n  )((props) =>\n  \n  \n  <GoogleMap\n  defaultZoom={8}\n  defaultCenter={location}\n  >\n      {props.geoLocations.map((marker, index) => <Marker key={index} position={{lat: marker.lat, lng: marker.lng}} onClick={()=> props.onToggleOpenInfoWindow(index, marker)}>\n        {props.isOpen === index && <InfoWindow onCloseClick={props.onToggleOpenInfoWindow} >\n         <div>\n          <h1>{marker.info.name}</h1>\n          <h2>{marker.info.address}</h2>\n          <div>\n            {/* {showComments(marker.info._id)} */}\n          </div>\n         </div>\n        </InfoWindow>}\n        {/* {console.log(\"the info from props in maps component ----------------------- \", marker.info._id)} */}\n      </Marker>)}\n      {props.isMarkerShown &&\n        <Marker position={location} onClick={props.onToggleOpenInfoWindow}>\n          {props.isOpen && <InfoWindow onCloseClick={props.onToggleOpenInfoWindow}>\n            <h1>test</h1>\n          </InfoWindow>}\n        </Marker>}\n    </GoogleMap>\n  );\n\nexport default GymMap;\n\n\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Axios from 'axios';\n\n// const DetailsComponent = (props) => {\nclass DetailsComponent extends  React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            commentReview: '',\n            commentTitle: '',\n            commentRating: '',\n            theGymsComments: []\n        }\n    }\n\n    showComments = () => {\n        let commentArray = []\n        this.props.gymComments.forEach(oneComment => {\n            console.log(\"the for each in the details >>>>>>>>>>>>>> )))))))))))))) \", oneComment.gym.toString(), this.props.theGymId.toString())\n            if(String(oneComment.gym) === String(this.props.theGymId)) {\n                commentArray.push(oneComment);\n                // this.state.theGymsComments.push(oneComment);   // maybe a little problematic <<<<<<<<<< \n            }\n        })\n\n        // this.setState({theGymsComments: commentArray}, ()=>{\n\n\n\n            \n            console.log(\"the state info in the details _______________ \", this.state)\n            if(commentArray.length > 0) {\n                // this.setState({theGymsComments: commentArray})\n                // if(this.state.theGymsComments.length === 0 && this.props.gymComments.length > 0) {\n                //     this.setState({theGymsComments: [...this.props.gymComments]})\n                // }   \n                return commentArray.map((oneComment, i) => {\n                    console.log(\"the gym comments >>>>><<<<<<<<>>>>>>>><<<<<<<<<>>>>>> \", oneComment);\n                    return (\n                    <div key={i}>\n                      <div>\n                        <h3>{oneComment.owner.username}</h3>\n                        <h4>{oneComment.rating}</h4>\n                      </div>\n                      <div>\n                        <h3>{oneComment.title}</h3>\n                        <p>{oneComment.content}</p>\n                      </div>\n                    </div>\n                  )\n                })\n            }\n\n\n\n\n        // })\n\n\n    }\n\n    commentCreate = (event) => {\n        event.preventDefault()\n        console.log(\"calling the create route <<<<<<< \", this.state)\n        Axios.post(`http://https://jiu-jitsu-locator.herokuapp.com/reviews/create`, {\n            title: this.state.commentTitle,\n            content: this.state.commentReview,\n            rating: this.state.commentRating,\n            gymid: this.props.theGymId\n        }, {withCredentials: true})\n        .then(newlyCreatedComment => {\n            console.log(\"the review that was created >>>>>>> \", newlyCreatedComment.data);\n            this.setState({\n                commentReview: '',\n                commentTitle: '',\n                commentRating: '',\n                theGymsComments: [...this.props.gymComments].push(newlyCreatedComment.data)\n            })\n            this.props.getComments();\n            // this.props.push('/')\n        }).catch(err => console.log(\"error creating review \", err))\n    }\n\n    handleChange(event) {\n        const{name, value} = event.target\n        this.setState({[name]: value})\n    }\n\n    \n    render() {\n        console.log(\"the props in the details \", this.props)\n        return(\n            <div style={{  height: '300px', borderRadius: '4px', width: '30%', float: 'left', margin: '10px', padding: '10px'}}>\n            \n                {this.props.info.name && <h2>{this.props.info.name}</h2>}\n                {this.props.info.formatted_phone_number && <h4>{this.props.info.formatted_phone_number}</h4>}\n                {this.props.info.website && <h4>Website         {this.props.info.website}</h4>}\n                {this.props.info.photos && <img src={this.props.photo} alt=\"\"/>}\n                {this.props.info.rating && <div style={{ fontSize: `30px` }}><img style={{  height: '120px'}} src=\"https://icon-library.net/images/star-rating-icon/star-rating-icon-20.jpg\" />{this.props.info.rating}</div>}\n                {this.props.info.name && \n                <form action=\"/create\" method=\"post\" onSubmit={this.commentCreate}>\n                    <div>\n                        <label>Title</label>\n                        <input name=\"commentTitle\" value={this.state.title} onChange={(e) => this.handleChange(e)} />\n                        {/* <textarea name=\"comments\" id={this.props.info.name} style={{fontFamily: 'sans-serif', fontSize: '1.2em', border: '1px solid black'}}>\n                                Hey... say something here!\n                        </textarea> */}\n                        <br />\n                        <label>Rating</label>\n                        <input name=\"commentRating\" value={this.state.rating} onChange={(e) => this.handleChange(e)} />\n                        <br />\n                        <label>Comment</label>\n                        <input name=\"commentReview\" value={this.state.review} onChange={(e) => this.handleChange(e)} />\n                    </div>\n                    <input style={{border: '1px solid black'}}type=\"submit\" value=\"Submit\"/>\n                </form>\n            }\n            {this.showComments()}\n\n                \n            </div>\n        )\n    }\n}\n\nexport default DetailsComponent;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Geocode from \"react-geocode\";\n\n\nexport default class GymIndex extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            editing: false,\n        }\n    }\n    showGyms = () =>{\n        const myGyms= this.props.allTheGyms;\n        return myGyms.map((gym, i) => {\n           \n            return (\n                <div key={i} gym = {gym._id}>\n           \n              <h3>{gym.name}</h3>\n           \n            <p style={{maxWidth: '400px'}} >{gym.address} </p>\n\n           </div>\n         \n         \n         )\n    })\n}\nrender(){\n\n    //if(this.props.ready)\n\n    Geocode.fromAddress('{this.props.gym.address}').then(\n        response => {\n          const { lat, lng } = response.results[0].geometry.location;\n          console.log(lat, lng);\n        },\n        error => {\n          console.error(error);\n        }\n      );\n    return (\n        <div>\n\n            <h2>I am a GymsIndex component!!</h2>\n        {this.showGyms}\n        </div>\n    )\n}\n\n}","import React from 'react';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\n \nexport default class LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: '' };\n  }\n \n  handleChange = address => {\n    this.setState({ address });\n  };\n \n  handleSelect = address => {\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => console.log('Success', latLng))\n      .catch(error => console.error('Error', error));\n  };\n \n  render() {\n    return (\n      <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            <input\n              {...getInputProps({\n                placeholder: '...',\n                className: 'location-search-input',\n              })}\n            />\n            <div className=\"autocomplete-dropdown-container\">\n              {loading && <div>Loading...</div>}\n              {suggestions.filter(e => e.types.includes('health')).map(suggestion => {\n                console.log(suggestion.types.includes('health'))\n                const className = suggestion.active\n                  ? 'suggestion-item--active'\n                  : 'suggestion-item';\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                  ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                  : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                  >\n                    <span>{suggestion.description}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { Route, Switch, NavLink } from 'react-router-dom';\nimport Signup from './components/user/Signup.js';\nimport Login from './components/user/Login.js';\nimport Navbar from './components/Navbar.js'\nimport GymDetails from './components/gyms/DetailsComponent.js';\nimport GymIndex from './components/gyms/GymIndex.js';\nimport AuthService from './services/AuthService.js';\n// import PlacesAutocomplete from 'react-places-autocomplete';\nimport LocationSearchInput from './components/PlacesAutocomplete';\nimport 'lodash.debounce'\n\nimport Geocode from \"react-geocode\";\nimport DetailsComponent from './components/gyms/DetailsComponent';\n\nimport axios from 'axios';\nimport GymMap from './components/googleMap';\nimport UserProfile from './components/user/UserProfile';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      listOfGyms: [],\n      geoLocations: [],\n      currentlyLoggedIn: null,\n      ready: false,\n      signupShowing: false,\n      loginShowing: false,\n      mapReady: false,\n      isOpen: false,\n      details: {},\n      photo: \"\",\n      gymComments: [],\n      theGymId: ''\n    };\n\n    this.service = new AuthService();\n    Geocode.setApiKey(\"AIzaSyAU9nQ_E20F7o9usfZFFEv8lLeDkLjlCxk\");\n\n  }\n\n  componentDidMount() {\n    this.getAllGyms();\n    this.getCurrentlyLoggedInUser();\n  }\n\n\n  getAllGyms = () => {\n    axios.get(`http://https://jiu-jitsu-locator.herokuapp.com/gyms`)\n      .then(responseFromApi => {\n        const data = responseFromApi.data;\n\n        this.setState({\n          listOfGyms: data, ready: true\n        });\n\n        setTimeout(() => {\n          this.setState({ mapReady: true })\n        }, 1500)\n        this.setGeoLocations();\n      });\n  }\n\n  setGeoLocations = () => {\n\n    console.log(\"GEO LOCATIONs\");\n\n    this.state.listOfGyms.map(gym => {\n      return Geocode.fromAddress(gym.address).then(\n        response => {\n          const { lat, lng } = response.results[0].geometry.location;\n\n          this.setState({ geoLocations: [...this.state.geoLocations, { lat: lat, lng: lng, info: gym }] });\n        },\n        error => {\n          console.error(error);\n        }\n      );\n    });\n  }\n\n\n  getGymComments = (gymid) =>{\n\n    axios.get(`http://https://jiu-jitsu-locator.herokuapp.com/reviews/gymComments/${gymid}`)\n    .then(gymCommentsFromApi => {\n      console.log('DATA DETAILS');\n     \n     \n      \n\n      this.setState({  gymComments: gymCommentsFromApi.data });\n      \n    }).catch(err => console.log(err))\n\n\n\n  }\n\n  onToggleOpenInfoWindow = (number, gymInfo) => {\n    if (gymInfo) {\n      axios.get(`http://https://jiu-jitsu-locator.herokuapp.com/gyms/getPlacesDetails/` + gymInfo.info.place_id)\n        .then(responseFromApi => {\n          const data = responseFromApi.data.result;\n\n          axios.get(`http://https://jiu-jitsu-locator.herokuapp.com/reviews/gymComments/${gymInfo.info._id}`)\n          .then(gymCommentsFromApi => {\n            console.log('DATA DETAILS');\n            console.log(data);\n            console.log(\"the gym info -------- \", gymInfo);\n            \n  \n            this.setState({ isOpen: number, details: data, gymComments: gymCommentsFromApi.data, theGymId: gymInfo.info._id });\n            \n          }).catch(err => console.log(err))\n\n        });\n\n        console.log(gymInfo.info.place_id);\n\n      axios.get(`http://https://jiu-jitsu-locator.herokuapp.com/gyms/getPlacesPhotos/` + gymInfo.info.place_id)\n        .then(responseFromApi => {\n            console.log(\"API RESPONSE\");\n            console.log(responseFromApi.data);\n            this.setState({\n                photo: responseFromApi.data.photos[0]\n            });\n\n            console.log(\"PHOTO: \");\n            console.log(this.state.photo);\n        });\n    }\n  }\n\n  getCurrentlyLoggedInUser = () => {\n    this.service.currentUser()\n      .then((theUser) => {\n        this.setState({ currentlyLoggedIn: theUser })\n      })\n      .catch(() => {\n        this.setState({ currentlyLoggedIn: null })\n      })\n  }\n\n  toggleForm = (whichForm) => {\n\n    let theForm;\n\n    if (whichForm === \"signup\") {\n      theForm = 'signupShowing'\n    } else {\n      theForm = 'loginShowing'\n    }\n\n    this.setState({ [theForm]: !this.state[theForm] })\n  }\n\n  render() {\n    \n    if (this.state.mapReady)\n      return (\n        <div>\n          <div class=\"allIncludedNavbar\">\n          <div class=\"top-navigation\">\n          <h1>Jiu-Jitsu Locator\n          <img src=\"https://cdn0.iconfinder.com/data/icons/small-n-flat/24/678111-map-marker-512.png\" style={{ height: `30px` }}/></h1>\n          <Navbar\n            theUser={this.state.currentlyLoggedIn}\n            pleaseLogOut={() => this.service.logout()}\n            toggleForm={this.toggleForm}\n            getUser={this.getCurrentlyLoggedInUser}\n            \n\n          />\n        \n          <div className=\"searchThing\">\n          <img src=\"https://cdn.pixabay.com/photo/2017/01/13/01/22/magnifying-glass-1976105_960_720.png\" style={{ height: `30px` }}></img>\n            <LocationSearchInput />\n          </div>\n          \n         {this.state.signupShowing &&\n            <Signup getUser={this.getCurrentlyLoggedInUser}\n            toggleForm={this.toggleForm}\n            />\n          }\n\n          {this.state.loginShowing &&\n            <Login getUser={this.getCurrentlyLoggedInUser}\n            toggleForm={this.toggleForm}\n            />\n          }\n              </div>\n              </div>\n            <div class=\"mapDetailsComponent\">  \n          <GymMap geoLocations={this.state.geoLocations} onToggleOpenInfoWindow={this.onToggleOpenInfoWindow} isOpen={this.state.isOpen} />\n          {console.log(\"the state in app js =============== \", this.state)}\n\n\n          <DetailsComponent {...this.props} info={this.state.details}\n           photo={this.state.photo}\n           gymComments={this.state.gymComments}\n            theGymId={this.state.theGymId}\n            getComments = {this.getGymComments}\n         \n            />\n           </div>\n\n\n          <Switch>\n            <Route exact path=\"/gyms\" component={GymIndex} render={(props) => <GymIndex\n              {...props}\n              theUser={this.state.currentlyLoggedIn}\n              allTheGyms={this.state.listOfGyms} />} />\n\n            <Route exact path=\"/gyms/:theID\" render={(props) => <GymDetails\n              {...props}\n              allTheGyms={this.state.listOfGyms}\n              ready={this.state.ready}\n              getData={this.getAllGyms}\n              theUser={this.state.currentlyLoggedIn}\n            />} />\n\n\n           \n\n          </Switch>\n          {this.state.listOfGyms.map((gym, i) => {\n            return (\n              <div key={i}>\n                {/* <h1>{gym.name}</h1> */}\n                {/* <h2>{gym.address}</h2> */}\n\n              </div>\n\n            );\n          })}\n\n        </div>\n      )\n    else\n      return (\n        <div>\n\n          <div className=\"overlay\"></div>\n        </div>\n      );\n  }\n}\nexport default App;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nexport default class UserProfile extends Component{\n    constructor(props) {\n        super(props)\n      \n }\n render(){\n     return(\n         <div> this is Profile page</div>\n     )\n }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}